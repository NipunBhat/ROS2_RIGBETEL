<?xml version="1.0" ?>
<robot name="rmp_ros2bot" xmlns:xacro="http://www.ros.org/wiki/xacro" >

<xacro:property name="body_color" value="Gazebo/Silver" />
<xacro:property name="wheel_color" value="Gazebo/Black" />
<xacro:property name="lidar_color" value="Gazebo/Grey" />
<xacro:property name="camera_color" value="Gazebo/Red" />

<gazebo>
  <plugin name="control" filename="libgazebo_ros_control.so"/>
</gazebo>
<gazebo reference="base_link">
  <material>${body_color}</material>
  <mu1>0.2</mu1>
  <mu2>0.2</mu2>
  <selfCollide>true</selfCollide>
  <gravity>true</gravity>
</gazebo>

<gazebo reference="right_wheel_1">
  <material>${wheel_color}</material>
  <mu1>1.0</mu1>
  <mu2>1.0</mu2>
  <selfCollide>true</selfCollide>
</gazebo>

<gazebo reference="left_wheel_1">
  <material>${wheel_color}</material>
  <mu1>1.0</mu1>
  <mu2>1.0</mu2>
  <selfCollide>true</selfCollide>
</gazebo>

<gazebo reference="caster_1">
  <material>${body_color}</material>
  <mu1>0.02</mu1>
  <mu2>0.02</mu2>
  <selfCollide>true</selfCollide>
</gazebo>

<gazebo reference="lidar_1">
  <material>${lidar_color}</material>
  <mu1>0.2</mu1>
  <mu2>0.2</mu2>
  <selfCollide>true</selfCollide>
      <sensor name="laser" type="ray">
            <pose> 0 0 0 0 0 0 </pose>
            <visualize>true</visualize>
            <update_rate>10</update_rate>
            <ray>
                <scan>
                    <horizontal>
                        <samples>360</samples>
                        <min_angle>-3.14</min_angle>
                        <max_angle>3.14</max_angle>
                    </horizontal>
                </scan>
                <range>
                    <min>0.3</min>
                    <max>12</max>
                </range>
            </ray>
            <plugin name="laser_controller" filename="libgazebo_ros_ray_sensor.so">
                <ros>
                    <argument>~/out:=scan</argument>
                </ros>
                <output_type>sensor_msgs/LaserScan</output_type>
                <frame_name>laser_frame</frame_name>
            </plugin>
        </sensor>
</gazebo>

<gazebo reference="camera_link">
    <material>${camera_color}</material>
</gazebo>

<!-- Differential drive plugin for gazebo -->
	<gazebo>
	<plugin name='diff_drive' filename='libgazebo_ros_diff_drive.so'>
		<ros>
		<!-- <namespace>/demo</namespace> -->
		</ros>

		<!-- wheels -->
    <right_joint>right_wheel_1</right_joint>
		<left_joint>left_wheel_1</left_joint>

		<!-- kinematics -->
		<wheel_separation>0.19</wheel_separation>
		<wheel_diameter>0.06</wheel_diameter>

		<!-- limits -->
		<max_wheel_torque>20</max_wheel_torque>
		<max_wheel_acceleration>1.0</max_wheel_acceleration>

		<!-- output -->
		<publish_odom>true</publish_odom>
		<publish_odom_tf>true</publish_odom_tf>
		<publish_wheel_tf>false</publish_wheel_tf>

		<odometry_frame>odom</odometry_frame>
		<robot_base_frame>base_link</robot_base_frame>
	</plugin>

	</gazebo>

</robot>
